<?xml version="1.0" encoding="utf-8"?>
<TestRun id="49a978b6-a095-4b7e-8638-4e2a48890d5b" name="@r3e 2025-08-22 04:20:11" xmlns="http://microsoft.com/schemas/VisualStudio/TeamTest/2010">
  <Times creation="2025-08-22T04:20:11.3634559+00:00" queuing="2025-08-22T04:20:11.3634559+00:00" start="2025-08-22T04:20:07.1082212+00:00" finish="2025-08-22T04:20:48.4095489+00:00" />
  <TestSettings name="default" id="b8c43c98-42c3-424b-938d-cde81534c7d5">
    <Deployment runDeploymentRoot="_r3e_2025-08-22_04_20_11" />
  </TestSettings>
  <Results>
    <UnitTestResult executionId="e026bb7e-2c57-427f-b26a-ef15250c9d87" testId="8dc7aaf8-eccc-25c6-3e3b-36a084427ca9" testName="NeoSharp.Tests.Crypto.NEP2Tests.TestNEP2AddressGeneration" computerName="r3e" duration="00:00:00.0002020" startTime="2025-08-22T04:20:48.3482268+00:00" endTime="2025-08-22T04:20:48.3482269+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e026bb7e-2c57-427f-b26a-ef15250c9d87">
      <Output>
        <ErrorInfo>
          <Message>System.FormatException : Invalid base58 check string</Message>
          <StackTrace>   at NeoSharp.Wallet.NEP2.Base58CheckDecode(String encoded) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 280
   at NeoSharp.Wallet.NEP2.DecryptToBytes(String nep2Key, String password, ScryptParams scryptParams) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 123
   at NeoSharp.Wallet.NEP2.Decrypt(String nep2Key, String password, ScryptParams scryptParams) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 103
   at NeoSharp.Tests.Crypto.NEP2Tests.TestNEP2AddressGeneration() in /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs:line 204
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="0bab672f-3672-4709-bc15-1c84a56149a0" testId="e00d70fb-44f8-7b36-8e1e-0ef0429966ac" testName="NeoSharp.Tests.Crypto.NEP2Tests.TestNEP2WithDifferentScryptParams" computerName="r3e" duration="00:00:03.6776046" startTime="2025-08-22T04:20:33.3870294+00:00" endTime="2025-08-22T04:20:33.3870294+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="0bab672f-3672-4709-bc15-1c84a56149a0">
      <Output>
        <ErrorInfo>
          <Message>System.FormatException : Invalid base58 check string</Message>
          <StackTrace>   at NeoSharp.Wallet.NEP2.Base58CheckDecode(String encoded) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 280
   at NeoSharp.Wallet.NEP2.DecryptToBytes(String nep2Key, String password, ScryptParams scryptParams) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 123
   at NeoSharp.Wallet.NEP2.Decrypt(String nep2Key, String password, ScryptParams scryptParams) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 103
   at NeoSharp.Tests.Crypto.NEP2Tests.TestNEP2WithDifferentScryptParams() in /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs:line 171
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8b2be2de-e38f-4b58-8fd3-c6d5fdf52eb0" testId="02b756d5-cbae-c1fe-81a7-b40c49aaf7bf" testName="NeoSharp.Tests.Crypto.NEP2Tests.TestDecryptWithDefaultScryptParams" computerName="r3e" duration="00:00:00.0003050" startTime="2025-08-22T04:20:33.3872850+00:00" endTime="2025-08-22T04:20:33.3872850+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8b2be2de-e38f-4b58-8fd3-c6d5fdf52eb0">
      <Output>
        <ErrorInfo>
          <Message>System.FormatException : Invalid base58 check string</Message>
          <StackTrace>   at NeoSharp.Wallet.NEP2.Base58CheckDecode(String encoded) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 273
   at NeoSharp.Wallet.NEP2.DecryptToBytes(String nep2Key, String password, ScryptParams scryptParams) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 123
   at NeoSharp.Wallet.NEP2.Decrypt(String nep2Key, String password, ScryptParams scryptParams) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 103
   at NeoSharp.Tests.Crypto.NEP2Tests.TestDecryptWithDefaultScryptParams() in /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs:line 22
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6f7f0079-bd98-4b53-b813-1d48593ce3c6" testId="47219b03-e477-2ce4-e2b2-e738b7e057c5" testName="NeoSharp.Tests.Crypto.NEP2Tests.TestEncryptWithNonDefaultScryptParams" computerName="r3e" duration="00:00:00.0036149" startTime="2025-08-22T04:20:37.1370705+00:00" endTime="2025-08-22T04:20:37.1370705+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6f7f0079-bd98-4b53-b813-1d48593ce3c6">
      <Output>
        <ErrorInfo>
          <Message>Expected encrypted to be "6PYM7jHL3uwhP8uuHP9fMGMfJxfyQbanUZPQEh1772iyb7vRnUkbkZmdRT" with a length of 58, but "QnVwghv7C7vBxoJCewcvJSY3Eeoa6DT3BMUhjUeCbwokzCHpoP9mrgMTM27" has a length of 59, differs near "QnV" (index 0).</Message>
          <StackTrace>   at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)
   at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)
   at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)
   at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
   at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
   at FluentAssertions.Primitives.StringEqualityValidator.ValidateAgainstLengthDifferences()
   at FluentAssertions.Primitives.StringValidator.Validate()
   at FluentAssertions.Primitives.StringAssertions`1.Be(String expected, String because, Object[] becauseArgs)
   at NeoSharp.Tests.Crypto.NEP2Tests.TestEncryptWithNonDefaultScryptParams() in /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs:line 74
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="e4605da4-1c54-4343-afe1-6136e65c7c1a" testId="9ef9cf35-6a67-9598-3685-c5eb1b930644" testName="NeoSharp.Tests.Crypto.NEP2Tests.TestMultipleEncryptionsProduceDifferentResults" computerName="r3e" duration="00:00:07.5732478" startTime="2025-08-22T04:20:44.7092655+00:00" endTime="2025-08-22T04:20:44.7092658+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="e4605da4-1c54-4343-afe1-6136e65c7c1a">
      <Output>
        <ErrorInfo>
          <Message>Expected encrypted1 not to be "QnVwghv7A5r1UrnrEfimzGdeWjpMeQEubkwJkW5rqaaAhKU2r1gR2LLi6t7".</Message>
          <StackTrace>   at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)
   at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)
   at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)
   at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
   at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
   at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args)
   at FluentAssertions.Primitives.StringAssertions`1.NotBe(String unexpected, String because, Object[] becauseArgs)
   at NeoSharp.Tests.Crypto.NEP2Tests.TestMultipleEncryptionsProduceDifferentResults() in /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs:line 223
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="882d167d-91be-4e2c-b6f5-e7347a9f7c05" testId="4f32cb3d-de52-e96e-9283-a46161e53f2c" testName="NeoSharp.Tests.Crypto.NEP2Tests.TestVariousPasswords(password: &quot;VeryLongPasswordWithSpecialCharacters!@#$%^&amp;*()_+-&quot;···)" computerName="r3e" duration="00:00:03.6202272" startTime="2025-08-22T04:20:22.3139027+00:00" endTime="2025-08-22T04:20:22.3139028+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="882d167d-91be-4e2c-b6f5-e7347a9f7c05">
      <Output>
        <ErrorInfo>
          <Message>System.FormatException : Invalid base58 check string</Message>
          <StackTrace>   at NeoSharp.Wallet.NEP2.Base58CheckDecode(String encoded) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 280
   at NeoSharp.Wallet.NEP2.DecryptToBytes(String nep2Key, String password, ScryptParams scryptParams) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 123
   at NeoSharp.Wallet.NEP2.Decrypt(String nep2Key, String password, ScryptParams scryptParams) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 103
   at NeoSharp.Tests.Crypto.NEP2Tests.TestVariousPasswords(String password) in /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs:line 147
   at InvokeStub_NEP2Tests.TestVariousPasswords(Object, Span`1)
   at System.Reflection.MethodBaseInvoker.InvokeWithOneArg(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="15895f7a-1acd-4296-84e5-a0ad431bf658" testId="8b02887a-436a-84b1-9469-502e894249de" testName="NeoSharp.Tests.Crypto.NEP2Tests.TestVariousPasswords(password: &quot;&quot;)" computerName="r3e" duration="00:00:00.0003308" startTime="2025-08-22T04:20:18.6934012+00:00" endTime="2025-08-22T04:20:18.6934012+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="15895f7a-1acd-4296-84e5-a0ad431bf658">
      <Output>
        <ErrorInfo>
          <Message>System.ArgumentException : Password cannot be empty (Parameter 'password')</Message>
          <StackTrace>   at NeoSharp.Wallet.NEP2.Encrypt(Byte[] privateKey, String password, ScryptParams scryptParams, String address) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 52
   at NeoSharp.Wallet.NEP2.Encrypt(ECKeyPair keyPair, String password, ScryptParams scryptParams) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 35
   at NeoSharp.Tests.Crypto.NEP2Tests.TestVariousPasswords(String password) in /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs:line 146
   at InvokeStub_NEP2Tests.TestVariousPasswords(Object, Span`1)
   at System.Reflection.MethodBaseInvoker.InvokeWithOneArg(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="6345b864-53c5-4530-92f1-18676488cffa" testId="694269c9-e36e-d154-83f2-af845bc2e686" testName="NeoSharp.Tests.Crypto.NEP2Tests.TestVariousPasswords(password: &quot;a&quot;)" computerName="r3e" duration="00:00:03.6283823" startTime="2025-08-22T04:20:18.6930563+00:00" endTime="2025-08-22T04:20:18.6930563+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="6345b864-53c5-4530-92f1-18676488cffa">
      <Output>
        <ErrorInfo>
          <Message>System.FormatException : Invalid base58 check string</Message>
          <StackTrace>   at NeoSharp.Wallet.NEP2.Base58CheckDecode(String encoded) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 280
   at NeoSharp.Wallet.NEP2.DecryptToBytes(String nep2Key, String password, ScryptParams scryptParams) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 123
   at NeoSharp.Wallet.NEP2.Decrypt(String nep2Key, String password, ScryptParams scryptParams) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 103
   at NeoSharp.Tests.Crypto.NEP2Tests.TestVariousPasswords(String password) in /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs:line 147
   at InvokeStub_NEP2Tests.TestVariousPasswords(Object, Span`1)
   at System.Reflection.MethodBaseInvoker.InvokeWithOneArg(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="12827a84-3646-4046-b46e-f618e5f0ceea" testId="47faf41c-250f-3921-1a8f-8cb28a6d80ff" testName="NeoSharp.Tests.Crypto.NEP2Tests.TestRoundTripEncryptionDecryption" computerName="r3e" duration="00:00:03.7444467" startTime="2025-08-22T04:20:37.1367924+00:00" endTime="2025-08-22T04:20:37.1367925+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="12827a84-3646-4046-b46e-f618e5f0ceea">
      <Output>
        <ErrorInfo>
          <Message>System.FormatException : Invalid base58 check string</Message>
          <StackTrace>   at NeoSharp.Wallet.NEP2.Base58CheckDecode(String encoded) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 280
   at NeoSharp.Wallet.NEP2.DecryptToBytes(String nep2Key, String password, ScryptParams scryptParams) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 123
   at NeoSharp.Wallet.NEP2.Decrypt(String nep2Key, String password, ScryptParams scryptParams) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 103
   at NeoSharp.Tests.Crypto.NEP2Tests.TestRoundTripEncryptionDecryption() in /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs:line 89
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="cbc83441-1ffd-4944-bd67-d34564affab4" testId="8920274a-5d15-dd80-35c4-6ef25156aa22" testName="NeoSharp.Tests.Crypto.NEP2Tests.TestVariousPasswords(password: &quot;\ud83d\udd10\ud83d\udd11\ud83d\udc8e&quot;)" computerName="r3e" duration="00:00:03.6983137" startTime="2025-08-22T04:20:26.0124546+00:00" endTime="2025-08-22T04:20:26.0124546+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="cbc83441-1ffd-4944-bd67-d34564affab4">
      <Output>
        <ErrorInfo>
          <Message>System.FormatException : Invalid base58 check string</Message>
          <StackTrace>   at NeoSharp.Wallet.NEP2.Base58CheckDecode(String encoded) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 280
   at NeoSharp.Wallet.NEP2.DecryptToBytes(String nep2Key, String password, ScryptParams scryptParams) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 123
   at NeoSharp.Wallet.NEP2.Decrypt(String nep2Key, String password, ScryptParams scryptParams) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 103
   at NeoSharp.Tests.Crypto.NEP2Tests.TestVariousPasswords(String password) in /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs:line 147
   at InvokeStub_NEP2Tests.TestVariousPasswords(Object, Span`1)
   at System.Reflection.MethodBaseInvoker.InvokeWithOneArg(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="590e2d1e-bd9c-4a7a-95f4-fbbb90f228b0" testId="35966a0e-660b-4e81-3caf-977868899497" testName="NeoSharp.Tests.Crypto.NEP2Tests.TestDecryptWithNonDefaultScryptParams" computerName="r3e" duration="00:00:00.0001642" startTime="2025-08-22T04:20:33.3874497+00:00" endTime="2025-08-22T04:20:33.3874498+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="590e2d1e-bd9c-4a7a-95f4-fbbb90f228b0">
      <Output>
        <ErrorInfo>
          <Message>System.FormatException : Invalid base58 check string</Message>
          <StackTrace>   at NeoSharp.Wallet.NEP2.Base58CheckDecode(String encoded) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 273
   at NeoSharp.Wallet.NEP2.DecryptToBytes(String nep2Key, String password, ScryptParams scryptParams) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 123
   at NeoSharp.Wallet.NEP2.Decrypt(String nep2Key, String password, ScryptParams scryptParams) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 103
   at NeoSharp.Tests.Crypto.NEP2Tests.TestDecryptWithNonDefaultScryptParams() in /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs:line 37
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="c72a942e-e630-473a-97cd-e179de8b42ac" testId="ec4a4449-1424-a7ee-e040-db656a90d838" testName="NeoSharp.Tests.Crypto.NEP2Tests.TestVariousPasswords(password: &quot;password&quot;)" computerName="r3e" duration="00:00:03.7254487" startTime="2025-08-22T04:20:15.0645661+00:00" endTime="2025-08-22T04:20:15.0645662+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="c72a942e-e630-473a-97cd-e179de8b42ac">
      <Output>
        <ErrorInfo>
          <Message>System.FormatException : Invalid base58 check string</Message>
          <StackTrace>   at NeoSharp.Wallet.NEP2.Base58CheckDecode(String encoded) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 280
   at NeoSharp.Wallet.NEP2.DecryptToBytes(String nep2Key, String password, ScryptParams scryptParams) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 123
   at NeoSharp.Wallet.NEP2.Decrypt(String nep2Key, String password, ScryptParams scryptParams) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 103
   at NeoSharp.Tests.Crypto.NEP2Tests.TestVariousPasswords(String password) in /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs:line 147
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="992cb931-6e89-475a-94e8-309a5d0fda1c" testId="05f8f41f-2a0a-483a-d80a-d63002f27122" testName="NeoSharp.Tests.Crypto.NEP2Tests.TestNEP2KeyChecksumValidation" computerName="r3e" duration="00:00:03.8187124" startTime="2025-08-22T04:20:11.3420950+00:00" endTime="2025-08-22T04:20:11.3421163+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="992cb931-6e89-475a-94e8-309a5d0fda1c">
      <Output>
        <ErrorInfo>
          <Message>Expected exception message to match the equivalent of "*checksum*", but "Invalid base58 check string" does not.
</Message>
          <StackTrace>   at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)
   at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)
   at FluentAssertions.Execution.CollectingAssertionStrategy.ThrowIfAny(IDictionary`2 context)
   at FluentAssertions.Execution.AssertionScope.Dispose()
   at FluentAssertions.Specialized.ExceptionAssertions`1.ExceptionMessageAssertion.Execute(IEnumerable`1 messages, String expectation, String because, Object[] becauseArgs)
   at FluentAssertions.Specialized.ExceptionAssertions`1.ExceptionMessageAssertion.Execute(IEnumerable`1 messages, String expectation, String because, Object[] becauseArgs)
   at FluentAssertions.Specialized.ExceptionAssertions`1.WithMessage(String expectedWildcardPattern, String because, Object[] becauseArgs)
   at NeoSharp.Tests.Crypto.NEP2Tests.TestNEP2KeyChecksumValidation() in /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs:line 193
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="8061389c-94b2-47c8-baf1-9b240a141d22" testId="2f9efc0b-2b51-e1f2-b995-c9e4d27be7ef" testName="NeoSharp.Tests.Crypto.NEP2Tests.TestInvalidNEP2Format" computerName="r3e" duration="00:00:00.0012545" startTime="2025-08-22T04:20:48.3491914+00:00" endTime="2025-08-22T04:20:48.3491920+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="8061389c-94b2-47c8-baf1-9b240a141d22">
      <Output>
        <ErrorInfo>
          <Message>Expected a &lt;System.FormatException&gt; to be thrown, but found &lt;System.ArgumentException&gt;:
System.ArgumentException: NEP-2 key cannot be empty (Parameter 'nep2Key')
   at NeoSharp.Wallet.NEP2.DecryptToBytes(String nep2Key, String password, ScryptParams scryptParams) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 117
   at NeoSharp.Wallet.NEP2.Decrypt(String nep2Key, String password, ScryptParams scryptParams) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 103
   at NeoSharp.Tests.Crypto.NEP2Tests.&lt;&gt;c__DisplayClass6_0.&lt;TestInvalidNEP2Format&gt;b__0() in /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs:line 128
   at FluentAssertions.Specialized.ActionAssertions.InvokeSubject()
   at FluentAssertions.Specialized.DelegateAssertions`2.InvokeSubjectWithInterception().</Message>
          <StackTrace>   at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)
   at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)
   at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)
   at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
   at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
   at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args)
   at FluentAssertions.Specialized.DelegateAssertionsBase`2.ThrowInternal[TException](Exception exception, String because, Object[] becauseArgs)
   at FluentAssertions.Specialized.DelegateAssertions`2.Throw[TException](String because, Object[] becauseArgs)
   at NeoSharp.Tests.Crypto.NEP2Tests.TestInvalidNEP2Format() in /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs:line 129
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="ee04e81b-aa38-453f-a473-0f937a5c0497" testId="8d7a3cb7-0721-5fbc-8b4a-ca2018c37dfd" testName="NeoSharp.Tests.Crypto.NEP2Tests.TestEncryptWithDefaultScryptParams" computerName="r3e" duration="00:00:03.6383330" startTime="2025-08-22T04:20:48.3478245+00:00" endTime="2025-08-22T04:20:48.3478249+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="ee04e81b-aa38-453f-a473-0f937a5c0497">
      <Output>
        <ErrorInfo>
          <Message>Expected encrypted to start with "6P", but "QnVwghv7ANAQWynE6qPk4MoqbsU4Ny3gBGJ3SzERCgYH6mjWmFMecHDYNdD" differs near "QnV" (index 0).</Message>
          <StackTrace>   at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)
   at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)
   at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)
   at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
   at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
   at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args)
   at FluentAssertions.Primitives.StringStartValidator.ValidateAgainstMismatch()
   at FluentAssertions.Primitives.StringValidator.Validate()
   at FluentAssertions.Primitives.StringAssertions`1.StartWith(String expected, String because, Object[] becauseArgs)
   at NeoSharp.Tests.Crypto.NEP2Tests.TestEncryptWithDefaultScryptParams() in /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs:line 54
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
    <UnitTestResult executionId="63ea934f-a4e5-4a40-93d8-1020887e4dc2" testId="36429002-8d89-ea56-e975-9c33a5aedcfa" testName="NeoSharp.Tests.Crypto.NEP2Tests.TestDecryptWithWrongPassword" computerName="r3e" duration="00:00:03.6964826" startTime="2025-08-22T04:20:29.7093879+00:00" endTime="2025-08-22T04:20:29.7093880+00:00" testType="13cdc9d9-ddb5-4fa4-a97d-d965ccfc6d4b" outcome="Failed" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" relativeResultsDirectory="63ea934f-a4e5-4a40-93d8-1020887e4dc2">
      <Output>
        <ErrorInfo>
          <Message>Expected a &lt;NeoSharp.Crypto.NEP2Exception&gt; to be thrown, but found &lt;System.FormatException&gt;:
System.FormatException: Invalid base58 check string
   at NeoSharp.Wallet.NEP2.Base58CheckDecode(String encoded) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 280
   at NeoSharp.Wallet.NEP2.DecryptToBytes(String nep2Key, String password, ScryptParams scryptParams) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 123
   at NeoSharp.Wallet.NEP2.Decrypt(String nep2Key, String password, ScryptParams scryptParams) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 103
   at NeoSharp.Tests.Crypto.NEP2Tests.&lt;&gt;c__DisplayClass5_0.&lt;TestDecryptWithWrongPassword&gt;b__0() in /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs:line 108
   at FluentAssertions.Specialized.ActionAssertions.InvokeSubject()
   at FluentAssertions.Specialized.DelegateAssertions`2.InvokeSubjectWithInterception().</Message>
          <StackTrace>   at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)
   at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)
   at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)
   at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
   at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
   at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args)
   at FluentAssertions.Specialized.DelegateAssertionsBase`2.ThrowInternal[TException](Exception exception, String because, Object[] becauseArgs)
   at FluentAssertions.Specialized.DelegateAssertions`2.Throw[TException](String because, Object[] becauseArgs)
   at NeoSharp.Tests.Crypto.NEP2Tests.TestDecryptWithWrongPassword() in /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs:line 109
   at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
   at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)</StackTrace>
        </ErrorInfo>
      </Output>
    </UnitTestResult>
  </Results>
  <TestDefinitions>
    <UnitTest name="NeoSharp.Tests.Crypto.NEP2Tests.TestInvalidNEP2Format" storage="/home/ubuntu/neoswift/neosharp/tests/neosharp.tests/bin/debug/net9.0/neosharp.tests.dll" id="2f9efc0b-2b51-e1f2-b995-c9e4d27be7ef">
      <Execution id="8061389c-94b2-47c8-baf1-9b240a141d22" />
      <TestMethod codeBase="/home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/bin/Debug/net9.0/NeoSharp.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="NeoSharp.Tests.Crypto.NEP2Tests" name="TestInvalidNEP2Format" />
    </UnitTest>
    <UnitTest name="NeoSharp.Tests.Crypto.NEP2Tests.TestNEP2WithDifferentScryptParams" storage="/home/ubuntu/neoswift/neosharp/tests/neosharp.tests/bin/debug/net9.0/neosharp.tests.dll" id="e00d70fb-44f8-7b36-8e1e-0ef0429966ac">
      <Execution id="0bab672f-3672-4709-bc15-1c84a56149a0" />
      <TestMethod codeBase="/home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/bin/Debug/net9.0/NeoSharp.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="NeoSharp.Tests.Crypto.NEP2Tests" name="TestNEP2WithDifferentScryptParams" />
    </UnitTest>
    <UnitTest name="NeoSharp.Tests.Crypto.NEP2Tests.TestEncryptWithDefaultScryptParams" storage="/home/ubuntu/neoswift/neosharp/tests/neosharp.tests/bin/debug/net9.0/neosharp.tests.dll" id="8d7a3cb7-0721-5fbc-8b4a-ca2018c37dfd">
      <Execution id="ee04e81b-aa38-453f-a473-0f937a5c0497" />
      <TestMethod codeBase="/home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/bin/Debug/net9.0/NeoSharp.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="NeoSharp.Tests.Crypto.NEP2Tests" name="TestEncryptWithDefaultScryptParams" />
    </UnitTest>
    <UnitTest name="NeoSharp.Tests.Crypto.NEP2Tests.TestEncryptWithNonDefaultScryptParams" storage="/home/ubuntu/neoswift/neosharp/tests/neosharp.tests/bin/debug/net9.0/neosharp.tests.dll" id="47219b03-e477-2ce4-e2b2-e738b7e057c5">
      <Execution id="6f7f0079-bd98-4b53-b813-1d48593ce3c6" />
      <TestMethod codeBase="/home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/bin/Debug/net9.0/NeoSharp.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="NeoSharp.Tests.Crypto.NEP2Tests" name="TestEncryptWithNonDefaultScryptParams" />
    </UnitTest>
    <UnitTest name="NeoSharp.Tests.Crypto.NEP2Tests.TestDecryptWithWrongPassword" storage="/home/ubuntu/neoswift/neosharp/tests/neosharp.tests/bin/debug/net9.0/neosharp.tests.dll" id="36429002-8d89-ea56-e975-9c33a5aedcfa">
      <Execution id="63ea934f-a4e5-4a40-93d8-1020887e4dc2" />
      <TestMethod codeBase="/home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/bin/Debug/net9.0/NeoSharp.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="NeoSharp.Tests.Crypto.NEP2Tests" name="TestDecryptWithWrongPassword" />
    </UnitTest>
    <UnitTest name="NeoSharp.Tests.Crypto.NEP2Tests.TestVariousPasswords(password: &quot;password&quot;)" storage="/home/ubuntu/neoswift/neosharp/tests/neosharp.tests/bin/debug/net9.0/neosharp.tests.dll" id="ec4a4449-1424-a7ee-e040-db656a90d838">
      <Execution id="c72a942e-e630-473a-97cd-e179de8b42ac" />
      <TestMethod codeBase="/home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/bin/Debug/net9.0/NeoSharp.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="NeoSharp.Tests.Crypto.NEP2Tests" name="TestVariousPasswords" />
    </UnitTest>
    <UnitTest name="NeoSharp.Tests.Crypto.NEP2Tests.TestVariousPasswords(password: &quot;&quot;)" storage="/home/ubuntu/neoswift/neosharp/tests/neosharp.tests/bin/debug/net9.0/neosharp.tests.dll" id="8b02887a-436a-84b1-9469-502e894249de">
      <Execution id="15895f7a-1acd-4296-84e5-a0ad431bf658" />
      <TestMethod codeBase="/home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/bin/Debug/net9.0/NeoSharp.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="NeoSharp.Tests.Crypto.NEP2Tests" name="TestVariousPasswords" />
    </UnitTest>
    <UnitTest name="NeoSharp.Tests.Crypto.NEP2Tests.TestNEP2AddressGeneration" storage="/home/ubuntu/neoswift/neosharp/tests/neosharp.tests/bin/debug/net9.0/neosharp.tests.dll" id="8dc7aaf8-eccc-25c6-3e3b-36a084427ca9">
      <Execution id="e026bb7e-2c57-427f-b26a-ef15250c9d87" />
      <TestMethod codeBase="/home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/bin/Debug/net9.0/NeoSharp.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="NeoSharp.Tests.Crypto.NEP2Tests" name="TestNEP2AddressGeneration" />
    </UnitTest>
    <UnitTest name="NeoSharp.Tests.Crypto.NEP2Tests.TestRoundTripEncryptionDecryption" storage="/home/ubuntu/neoswift/neosharp/tests/neosharp.tests/bin/debug/net9.0/neosharp.tests.dll" id="47faf41c-250f-3921-1a8f-8cb28a6d80ff">
      <Execution id="12827a84-3646-4046-b46e-f618e5f0ceea" />
      <TestMethod codeBase="/home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/bin/Debug/net9.0/NeoSharp.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="NeoSharp.Tests.Crypto.NEP2Tests" name="TestRoundTripEncryptionDecryption" />
    </UnitTest>
    <UnitTest name="NeoSharp.Tests.Crypto.NEP2Tests.TestMultipleEncryptionsProduceDifferentResults" storage="/home/ubuntu/neoswift/neosharp/tests/neosharp.tests/bin/debug/net9.0/neosharp.tests.dll" id="9ef9cf35-6a67-9598-3685-c5eb1b930644">
      <Execution id="e4605da4-1c54-4343-afe1-6136e65c7c1a" />
      <TestMethod codeBase="/home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/bin/Debug/net9.0/NeoSharp.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="NeoSharp.Tests.Crypto.NEP2Tests" name="TestMultipleEncryptionsProduceDifferentResults" />
    </UnitTest>
    <UnitTest name="NeoSharp.Tests.Crypto.NEP2Tests.TestDecryptWithNonDefaultScryptParams" storage="/home/ubuntu/neoswift/neosharp/tests/neosharp.tests/bin/debug/net9.0/neosharp.tests.dll" id="35966a0e-660b-4e81-3caf-977868899497">
      <Execution id="590e2d1e-bd9c-4a7a-95f4-fbbb90f228b0" />
      <TestMethod codeBase="/home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/bin/Debug/net9.0/NeoSharp.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="NeoSharp.Tests.Crypto.NEP2Tests" name="TestDecryptWithNonDefaultScryptParams" />
    </UnitTest>
    <UnitTest name="NeoSharp.Tests.Crypto.NEP2Tests.TestVariousPasswords(password: &quot;a&quot;)" storage="/home/ubuntu/neoswift/neosharp/tests/neosharp.tests/bin/debug/net9.0/neosharp.tests.dll" id="694269c9-e36e-d154-83f2-af845bc2e686">
      <Execution id="6345b864-53c5-4530-92f1-18676488cffa" />
      <TestMethod codeBase="/home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/bin/Debug/net9.0/NeoSharp.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="NeoSharp.Tests.Crypto.NEP2Tests" name="TestVariousPasswords" />
    </UnitTest>
    <UnitTest name="NeoSharp.Tests.Crypto.NEP2Tests.TestNEP2KeyChecksumValidation" storage="/home/ubuntu/neoswift/neosharp/tests/neosharp.tests/bin/debug/net9.0/neosharp.tests.dll" id="05f8f41f-2a0a-483a-d80a-d63002f27122">
      <Execution id="992cb931-6e89-475a-94e8-309a5d0fda1c" />
      <TestMethod codeBase="/home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/bin/Debug/net9.0/NeoSharp.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="NeoSharp.Tests.Crypto.NEP2Tests" name="TestNEP2KeyChecksumValidation" />
    </UnitTest>
    <UnitTest name="NeoSharp.Tests.Crypto.NEP2Tests.TestVariousPasswords(password: &quot;\ud83d\udd10\ud83d\udd11\ud83d\udc8e&quot;)" storage="/home/ubuntu/neoswift/neosharp/tests/neosharp.tests/bin/debug/net9.0/neosharp.tests.dll" id="8920274a-5d15-dd80-35c4-6ef25156aa22">
      <Execution id="cbc83441-1ffd-4944-bd67-d34564affab4" />
      <TestMethod codeBase="/home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/bin/Debug/net9.0/NeoSharp.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="NeoSharp.Tests.Crypto.NEP2Tests" name="TestVariousPasswords" />
    </UnitTest>
    <UnitTest name="NeoSharp.Tests.Crypto.NEP2Tests.TestVariousPasswords(password: &quot;VeryLongPasswordWithSpecialCharacters!@#$%^&amp;*()_+-&quot;···)" storage="/home/ubuntu/neoswift/neosharp/tests/neosharp.tests/bin/debug/net9.0/neosharp.tests.dll" id="4f32cb3d-de52-e96e-9283-a46161e53f2c">
      <Execution id="882d167d-91be-4e2c-b6f5-e7347a9f7c05" />
      <TestMethod codeBase="/home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/bin/Debug/net9.0/NeoSharp.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="NeoSharp.Tests.Crypto.NEP2Tests" name="TestVariousPasswords" />
    </UnitTest>
    <UnitTest name="NeoSharp.Tests.Crypto.NEP2Tests.TestDecryptWithDefaultScryptParams" storage="/home/ubuntu/neoswift/neosharp/tests/neosharp.tests/bin/debug/net9.0/neosharp.tests.dll" id="02b756d5-cbae-c1fe-81a7-b40c49aaf7bf">
      <Execution id="8b2be2de-e38f-4b58-8fd3-c6d5fdf52eb0" />
      <TestMethod codeBase="/home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/bin/Debug/net9.0/NeoSharp.Tests.dll" adapterTypeName="executor://xunit/VsTestRunner2/netcoreapp" className="NeoSharp.Tests.Crypto.NEP2Tests" name="TestDecryptWithDefaultScryptParams" />
    </UnitTest>
  </TestDefinitions>
  <TestEntries>
    <TestEntry testId="8dc7aaf8-eccc-25c6-3e3b-36a084427ca9" executionId="e026bb7e-2c57-427f-b26a-ef15250c9d87" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="e00d70fb-44f8-7b36-8e1e-0ef0429966ac" executionId="0bab672f-3672-4709-bc15-1c84a56149a0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="02b756d5-cbae-c1fe-81a7-b40c49aaf7bf" executionId="8b2be2de-e38f-4b58-8fd3-c6d5fdf52eb0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="47219b03-e477-2ce4-e2b2-e738b7e057c5" executionId="6f7f0079-bd98-4b53-b813-1d48593ce3c6" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="9ef9cf35-6a67-9598-3685-c5eb1b930644" executionId="e4605da4-1c54-4343-afe1-6136e65c7c1a" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="4f32cb3d-de52-e96e-9283-a46161e53f2c" executionId="882d167d-91be-4e2c-b6f5-e7347a9f7c05" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8b02887a-436a-84b1-9469-502e894249de" executionId="15895f7a-1acd-4296-84e5-a0ad431bf658" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="694269c9-e36e-d154-83f2-af845bc2e686" executionId="6345b864-53c5-4530-92f1-18676488cffa" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="47faf41c-250f-3921-1a8f-8cb28a6d80ff" executionId="12827a84-3646-4046-b46e-f618e5f0ceea" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8920274a-5d15-dd80-35c4-6ef25156aa22" executionId="cbc83441-1ffd-4944-bd67-d34564affab4" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="35966a0e-660b-4e81-3caf-977868899497" executionId="590e2d1e-bd9c-4a7a-95f4-fbbb90f228b0" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="ec4a4449-1424-a7ee-e040-db656a90d838" executionId="c72a942e-e630-473a-97cd-e179de8b42ac" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="05f8f41f-2a0a-483a-d80a-d63002f27122" executionId="992cb931-6e89-475a-94e8-309a5d0fda1c" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="2f9efc0b-2b51-e1f2-b995-c9e4d27be7ef" executionId="8061389c-94b2-47c8-baf1-9b240a141d22" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="8d7a3cb7-0721-5fbc-8b4a-ca2018c37dfd" executionId="ee04e81b-aa38-453f-a473-0f937a5c0497" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestEntry testId="36429002-8d89-ea56-e975-9c33a5aedcfa" executionId="63ea934f-a4e5-4a40-93d8-1020887e4dc2" testListId="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
  </TestEntries>
  <TestLists>
    <TestList name="Results Not in a List" id="8c84fa94-04c1-424b-9868-57a2d4851a1d" />
    <TestList name="All Loaded Results" id="19431567-8539-422a-85d7-44ee4e166bda" />
  </TestLists>
  <ResultSummary outcome="Failed">
    <Counters total="16" executed="16" passed="0" failed="16" error="0" timeout="0" aborted="0" inconclusive="0" passedButRunAborted="0" notRunnable="0" notExecuted="0" disconnected="0" warning="0" completed="0" inProgress="0" pending="0" />
    <Output>
      <StdOut>[xUnit.net 00:00:00.00] xUnit.net VSTest Adapter v2.8.2+699d445a1a (64-bit .NET 9.0.6)
[xUnit.net 00:00:00.05]   Discovering: NeoSharp.Tests
[xUnit.net 00:00:00.10]   Discovered:  NeoSharp.Tests
[xUnit.net 00:00:00.11]   Starting:    NeoSharp.Tests
[xUnit.net 00:00:03.96]       Expected exception message to match the equivalent of "*checksum*", but "Invalid base58 check string" does not.
[xUnit.net 00:00:03.96]       
[xUnit.net 00:00:03.96]       Stack Trace:
[xUnit.net 00:00:03.96]            at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)
[xUnit.net 00:00:03.96]            at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)
[xUnit.net 00:00:03.96]            at FluentAssertions.Execution.CollectingAssertionStrategy.ThrowIfAny(IDictionary`2 context)
[xUnit.net 00:00:03.96]            at FluentAssertions.Execution.AssertionScope.Dispose()
[xUnit.net 00:00:03.96]            at FluentAssertions.Specialized.ExceptionAssertions`1.ExceptionMessageAssertion.Execute(IEnumerable`1 messages, String expectation, String because, Object[] becauseArgs)
[xUnit.net 00:00:03.96]            at FluentAssertions.Specialized.ExceptionAssertions`1.ExceptionMessageAssertion.Execute(IEnumerable`1 messages, String expectation, String because, Object[] becauseArgs)
[xUnit.net 00:00:03.96]            at FluentAssertions.Specialized.ExceptionAssertions`1.WithMessage(String expectedWildcardPattern, String because, Object[] becauseArgs)
[xUnit.net 00:00:03.96]         /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs(193,0): at NeoSharp.Tests.Crypto.NEP2Tests.TestNEP2KeyChecksumValidation()
[xUnit.net 00:00:03.96]            at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
[xUnit.net 00:00:03.96]            at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)
[xUnit.net 00:00:07.68]       System.FormatException : Invalid base58 check string
[xUnit.net 00:00:07.68]       Stack Trace:
[xUnit.net 00:00:07.68]         /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs(280,0): at NeoSharp.Wallet.NEP2.Base58CheckDecode(String encoded)
[xUnit.net 00:00:07.68]         /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs(123,0): at NeoSharp.Wallet.NEP2.DecryptToBytes(String nep2Key, String password, ScryptParams scryptParams)
[xUnit.net 00:00:07.68]         /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs(103,0): at NeoSharp.Wallet.NEP2.Decrypt(String nep2Key, String password, ScryptParams scryptParams)
[xUnit.net 00:00:07.68]         /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs(147,0): at NeoSharp.Tests.Crypto.NEP2Tests.TestVariousPasswords(String password)
[xUnit.net 00:00:07.68]            at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
[xUnit.net 00:00:07.68]            at System.Reflection.MethodBaseInvoker.InvokeDirectByRefWithFewArgs(Object obj, Span`1 copyOfArgs, BindingFlags invokeAttr)
[xUnit.net 00:00:11.31]       System.FormatException : Invalid base58 check string
[xUnit.net 00:00:11.31]       Stack Trace:
[xUnit.net 00:00:11.31]         /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs(280,0): at NeoSharp.Wallet.NEP2.Base58CheckDecode(String encoded)
[xUnit.net 00:00:11.31]         /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs(123,0): at NeoSharp.Wallet.NEP2.DecryptToBytes(String nep2Key, String password, ScryptParams scryptParams)
[xUnit.net 00:00:11.31]         /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs(103,0): at NeoSharp.Wallet.NEP2.Decrypt(String nep2Key, String password, ScryptParams scryptParams)
[xUnit.net 00:00:11.31]         /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs(147,0): at NeoSharp.Tests.Crypto.NEP2Tests.TestVariousPasswords(String password)
[xUnit.net 00:00:11.31]            at InvokeStub_NEP2Tests.TestVariousPasswords(Object, Span`1)
[xUnit.net 00:00:11.31]            at System.Reflection.MethodBaseInvoker.InvokeWithOneArg(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
[xUnit.net 00:00:11.31]       System.ArgumentException : Password cannot be empty (Parameter 'password')
[xUnit.net 00:00:11.31]       Stack Trace:
[xUnit.net 00:00:11.31]         /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs(52,0): at NeoSharp.Wallet.NEP2.Encrypt(Byte[] privateKey, String password, ScryptParams scryptParams, String address)
[xUnit.net 00:00:11.31]         /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs(35,0): at NeoSharp.Wallet.NEP2.Encrypt(ECKeyPair keyPair, String password, ScryptParams scryptParams)
[xUnit.net 00:00:11.31]         /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs(146,0): at NeoSharp.Tests.Crypto.NEP2Tests.TestVariousPasswords(String password)
[xUnit.net 00:00:11.31]            at InvokeStub_NEP2Tests.TestVariousPasswords(Object, Span`1)
[xUnit.net 00:00:11.31]            at System.Reflection.MethodBaseInvoker.InvokeWithOneArg(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
[xUnit.net 00:00:14.93]       System.FormatException : Invalid base58 check string
[xUnit.net 00:00:14.93]       Stack Trace:
[xUnit.net 00:00:14.93]         /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs(280,0): at NeoSharp.Wallet.NEP2.Base58CheckDecode(String encoded)
[xUnit.net 00:00:14.93]         /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs(123,0): at NeoSharp.Wallet.NEP2.DecryptToBytes(String nep2Key, String password, ScryptParams scryptParams)
[xUnit.net 00:00:14.93]         /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs(103,0): at NeoSharp.Wallet.NEP2.Decrypt(String nep2Key, String password, ScryptParams scryptParams)
[xUnit.net 00:00:14.93]         /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs(147,0): at NeoSharp.Tests.Crypto.NEP2Tests.TestVariousPasswords(String password)
[xUnit.net 00:00:14.93]            at InvokeStub_NEP2Tests.TestVariousPasswords(Object, Span`1)
[xUnit.net 00:00:14.93]            at System.Reflection.MethodBaseInvoker.InvokeWithOneArg(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
[xUnit.net 00:00:18.63]       System.FormatException : Invalid base58 check string
[xUnit.net 00:00:18.63]       Stack Trace:
[xUnit.net 00:00:18.63]         /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs(280,0): at NeoSharp.Wallet.NEP2.Base58CheckDecode(String encoded)
[xUnit.net 00:00:18.63]         /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs(123,0): at NeoSharp.Wallet.NEP2.DecryptToBytes(String nep2Key, String password, ScryptParams scryptParams)
[xUnit.net 00:00:18.63]         /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs(103,0): at NeoSharp.Wallet.NEP2.Decrypt(String nep2Key, String password, ScryptParams scryptParams)
[xUnit.net 00:00:18.63]         /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs(147,0): at NeoSharp.Tests.Crypto.NEP2Tests.TestVariousPasswords(String password)
[xUnit.net 00:00:18.63]            at InvokeStub_NEP2Tests.TestVariousPasswords(Object, Span`1)
[xUnit.net 00:00:18.63]            at System.Reflection.MethodBaseInvoker.InvokeWithOneArg(Object obj, BindingFlags invokeAttr, Binder binder, Object[] parameters, CultureInfo culture)
[xUnit.net 00:00:22.33]       Expected a &lt;NeoSharp.Crypto.NEP2Exception&gt; to be thrown, but found &lt;System.FormatException&gt;:
[xUnit.net 00:00:22.33]       System.FormatException: Invalid base58 check string
[xUnit.net 00:00:22.33]          at NeoSharp.Wallet.NEP2.Base58CheckDecode(String encoded) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 280
[xUnit.net 00:00:22.33]          at NeoSharp.Wallet.NEP2.DecryptToBytes(String nep2Key, String password, ScryptParams scryptParams) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 123
[xUnit.net 00:00:22.33]          at NeoSharp.Wallet.NEP2.Decrypt(String nep2Key, String password, ScryptParams scryptParams) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 103
[xUnit.net 00:00:22.33]          at NeoSharp.Tests.Crypto.NEP2Tests.&lt;&gt;c__DisplayClass5_0.&lt;TestDecryptWithWrongPassword&gt;b__0() in /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs:line 108
[xUnit.net 00:00:22.33]          at FluentAssertions.Specialized.ActionAssertions.InvokeSubject()
[xUnit.net 00:00:22.33]          at FluentAssertions.Specialized.DelegateAssertions`2.InvokeSubjectWithInterception().
[xUnit.net 00:00:22.33]       Stack Trace:
[xUnit.net 00:00:22.33]            at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)
[xUnit.net 00:00:22.33]            at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)
[xUnit.net 00:00:22.33]            at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)
[xUnit.net 00:00:22.33]            at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
[xUnit.net 00:00:22.33]            at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
[xUnit.net 00:00:22.33]            at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args)
[xUnit.net 00:00:22.33]            at FluentAssertions.Specialized.DelegateAssertionsBase`2.ThrowInternal[TException](Exception exception, String because, Object[] becauseArgs)
[xUnit.net 00:00:22.33]            at FluentAssertions.Specialized.DelegateAssertions`2.Throw[TException](String because, Object[] becauseArgs)
[xUnit.net 00:00:22.33]         /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs(109,0): at NeoSharp.Tests.Crypto.NEP2Tests.TestDecryptWithWrongPassword()
[xUnit.net 00:00:22.33]            at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
[xUnit.net 00:00:22.33]            at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)
[xUnit.net 00:00:26.00]       System.FormatException : Invalid base58 check string
[xUnit.net 00:00:26.00]       Stack Trace:
[xUnit.net 00:00:26.01]         /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs(280,0): at NeoSharp.Wallet.NEP2.Base58CheckDecode(String encoded)
[xUnit.net 00:00:26.01]         /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs(123,0): at NeoSharp.Wallet.NEP2.DecryptToBytes(String nep2Key, String password, ScryptParams scryptParams)
[xUnit.net 00:00:26.01]         /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs(103,0): at NeoSharp.Wallet.NEP2.Decrypt(String nep2Key, String password, ScryptParams scryptParams)
[xUnit.net 00:00:26.01]         /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs(171,0): at NeoSharp.Tests.Crypto.NEP2Tests.TestNEP2WithDifferentScryptParams()
[xUnit.net 00:00:26.01]            at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
[xUnit.net 00:00:26.01]            at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)
[xUnit.net 00:00:26.01]       System.FormatException : Invalid base58 check string
[xUnit.net 00:00:26.01]       Stack Trace:
[xUnit.net 00:00:26.01]         /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs(273,0): at NeoSharp.Wallet.NEP2.Base58CheckDecode(String encoded)
[xUnit.net 00:00:26.01]         /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs(123,0): at NeoSharp.Wallet.NEP2.DecryptToBytes(String nep2Key, String password, ScryptParams scryptParams)
[xUnit.net 00:00:26.01]         /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs(103,0): at NeoSharp.Wallet.NEP2.Decrypt(String nep2Key, String password, ScryptParams scryptParams)
[xUnit.net 00:00:26.01]         /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs(22,0): at NeoSharp.Tests.Crypto.NEP2Tests.TestDecryptWithDefaultScryptParams()
[xUnit.net 00:00:26.01]            at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
[xUnit.net 00:00:26.01]            at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)
[xUnit.net 00:00:26.01]       System.FormatException : Invalid base58 check string
[xUnit.net 00:00:26.01]       Stack Trace:
[xUnit.net 00:00:26.01]         /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs(273,0): at NeoSharp.Wallet.NEP2.Base58CheckDecode(String encoded)
[xUnit.net 00:00:26.01]         /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs(123,0): at NeoSharp.Wallet.NEP2.DecryptToBytes(String nep2Key, String password, ScryptParams scryptParams)
[xUnit.net 00:00:26.01]         /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs(103,0): at NeoSharp.Wallet.NEP2.Decrypt(String nep2Key, String password, ScryptParams scryptParams)
[xUnit.net 00:00:26.01]         /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs(37,0): at NeoSharp.Tests.Crypto.NEP2Tests.TestDecryptWithNonDefaultScryptParams()
[xUnit.net 00:00:26.01]            at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
[xUnit.net 00:00:26.01]            at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)
[xUnit.net 00:00:29.75]       System.FormatException : Invalid base58 check string
[xUnit.net 00:00:29.75]       Stack Trace:
[xUnit.net 00:00:29.75]         /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs(280,0): at NeoSharp.Wallet.NEP2.Base58CheckDecode(String encoded)
[xUnit.net 00:00:29.75]         /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs(123,0): at NeoSharp.Wallet.NEP2.DecryptToBytes(String nep2Key, String password, ScryptParams scryptParams)
[xUnit.net 00:00:29.75]         /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs(103,0): at NeoSharp.Wallet.NEP2.Decrypt(String nep2Key, String password, ScryptParams scryptParams)
[xUnit.net 00:00:29.75]         /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs(89,0): at NeoSharp.Tests.Crypto.NEP2Tests.TestRoundTripEncryptionDecryption()
[xUnit.net 00:00:29.75]            at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
[xUnit.net 00:00:29.75]            at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)
[xUnit.net 00:00:29.76]       Expected encrypted to be "6PYM7jHL3uwhP8uuHP9fMGMfJxfyQbanUZPQEh1772iyb7vRnUkbkZmdRT" with a length of 58, but "QnVwghv7C7vBxoJCewcvJSY3Eeoa6DT3BMUhjUeCbwokzCHpoP9mrgMTM27" has a length of 59, differs near "QnV" (index 0).
[xUnit.net 00:00:29.76]       Stack Trace:
[xUnit.net 00:00:29.76]            at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)
[xUnit.net 00:00:29.76]            at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)
[xUnit.net 00:00:29.76]            at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)
[xUnit.net 00:00:29.76]            at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
[xUnit.net 00:00:29.76]            at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
[xUnit.net 00:00:29.76]            at FluentAssertions.Primitives.StringEqualityValidator.ValidateAgainstLengthDifferences()
[xUnit.net 00:00:29.76]            at FluentAssertions.Primitives.StringValidator.Validate()
[xUnit.net 00:00:29.76]            at FluentAssertions.Primitives.StringAssertions`1.Be(String expected, String because, Object[] becauseArgs)
[xUnit.net 00:00:29.76]         /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs(74,0): at NeoSharp.Tests.Crypto.NEP2Tests.TestEncryptWithNonDefaultScryptParams()
[xUnit.net 00:00:29.76]            at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
[xUnit.net 00:00:29.76]            at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)
[xUnit.net 00:00:37.33]       Expected encrypted1 not to be "QnVwghv7A5r1UrnrEfimzGdeWjpMeQEubkwJkW5rqaaAhKU2r1gR2LLi6t7".
[xUnit.net 00:00:37.33]       Stack Trace:
[xUnit.net 00:00:37.33]            at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)
[xUnit.net 00:00:37.33]            at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)
[xUnit.net 00:00:37.33]            at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)
[xUnit.net 00:00:37.33]            at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
[xUnit.net 00:00:37.33]            at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
[xUnit.net 00:00:37.33]            at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args)
[xUnit.net 00:00:37.33]            at FluentAssertions.Primitives.StringAssertions`1.NotBe(String unexpected, String because, Object[] becauseArgs)
[xUnit.net 00:00:37.33]         /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs(223,0): at NeoSharp.Tests.Crypto.NEP2Tests.TestMultipleEncryptionsProduceDifferentResults()
[xUnit.net 00:00:37.33]            at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
[xUnit.net 00:00:37.33]            at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)
[xUnit.net 00:00:40.97]       Expected encrypted to start with "6P", but "QnVwghv7ANAQWynE6qPk4MoqbsU4Ny3gBGJ3SzERCgYH6mjWmFMecHDYNdD" differs near "QnV" (index 0).
[xUnit.net 00:00:40.97]       Stack Trace:
[xUnit.net 00:00:40.97]            at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)
[xUnit.net 00:00:40.97]            at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)
[xUnit.net 00:00:40.97]            at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)
[xUnit.net 00:00:40.97]            at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
[xUnit.net 00:00:40.97]            at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
[xUnit.net 00:00:40.97]            at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args)
[xUnit.net 00:00:40.97]            at FluentAssertions.Primitives.StringStartValidator.ValidateAgainstMismatch()
[xUnit.net 00:00:40.97]            at FluentAssertions.Primitives.StringValidator.Validate()
[xUnit.net 00:00:40.97]            at FluentAssertions.Primitives.StringAssertions`1.StartWith(String expected, String because, Object[] becauseArgs)
[xUnit.net 00:00:40.97]         /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs(54,0): at NeoSharp.Tests.Crypto.NEP2Tests.TestEncryptWithDefaultScryptParams()
[xUnit.net 00:00:40.97]            at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
[xUnit.net 00:00:40.97]            at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)
[xUnit.net 00:00:40.97]       System.FormatException : Invalid base58 check string
[xUnit.net 00:00:40.97]       Stack Trace:
[xUnit.net 00:00:40.97]         /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs(280,0): at NeoSharp.Wallet.NEP2.Base58CheckDecode(String encoded)
[xUnit.net 00:00:40.97]         /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs(123,0): at NeoSharp.Wallet.NEP2.DecryptToBytes(String nep2Key, String password, ScryptParams scryptParams)
[xUnit.net 00:00:40.97]         /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs(103,0): at NeoSharp.Wallet.NEP2.Decrypt(String nep2Key, String password, ScryptParams scryptParams)
[xUnit.net 00:00:40.97]         /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs(204,0): at NeoSharp.Tests.Crypto.NEP2Tests.TestNEP2AddressGeneration()
[xUnit.net 00:00:40.97]            at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
[xUnit.net 00:00:40.97]            at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)
[xUnit.net 00:00:40.97]       Expected a &lt;System.FormatException&gt; to be thrown, but found &lt;System.ArgumentException&gt;:
[xUnit.net 00:00:40.97]       System.ArgumentException: NEP-2 key cannot be empty (Parameter 'nep2Key')
[xUnit.net 00:00:40.97]          at NeoSharp.Wallet.NEP2.DecryptToBytes(String nep2Key, String password, ScryptParams scryptParams) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 117
[xUnit.net 00:00:40.97]          at NeoSharp.Wallet.NEP2.Decrypt(String nep2Key, String password, ScryptParams scryptParams) in /home/ubuntu/NeoSwift/NeoSharp/src/NeoSharp/Wallet/NEP2.cs:line 103
[xUnit.net 00:00:40.97]          at NeoSharp.Tests.Crypto.NEP2Tests.&lt;&gt;c__DisplayClass6_0.&lt;TestInvalidNEP2Format&gt;b__0() in /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs:line 128
[xUnit.net 00:00:40.97]          at FluentAssertions.Specialized.ActionAssertions.InvokeSubject()
[xUnit.net 00:00:40.97]          at FluentAssertions.Specialized.DelegateAssertions`2.InvokeSubjectWithInterception().
[xUnit.net 00:00:40.97]       Stack Trace:
[xUnit.net 00:00:40.97]            at FluentAssertions.Execution.XUnit2TestFramework.Throw(String message)
[xUnit.net 00:00:40.97]            at FluentAssertions.Execution.TestFrameworkProvider.Throw(String message)
[xUnit.net 00:00:40.97]            at FluentAssertions.Execution.DefaultAssertionStrategy.HandleFailure(String message)
[xUnit.net 00:00:40.97]            at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
[xUnit.net 00:00:40.97]            at FluentAssertions.Execution.AssertionScope.FailWith(Func`1 failReasonFunc)
[xUnit.net 00:00:40.97]            at FluentAssertions.Execution.AssertionScope.FailWith(String message, Object[] args)
[xUnit.net 00:00:40.97]            at FluentAssertions.Specialized.DelegateAssertionsBase`2.ThrowInternal[TException](Exception exception, String because, Object[] becauseArgs)
[xUnit.net 00:00:40.97]            at FluentAssertions.Specialized.DelegateAssertions`2.Throw[TException](String because, Object[] becauseArgs)
[xUnit.net 00:00:40.97]         /home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs(129,0): at NeoSharp.Tests.Crypto.NEP2Tests.TestInvalidNEP2Format()
[xUnit.net 00:00:40.97]            at System.RuntimeMethodHandle.InvokeMethod(Object target, Void** arguments, Signature sig, Boolean isConstructor)
[xUnit.net 00:00:40.97]            at System.Reflection.MethodBaseInvoker.InvokeWithNoArgs(Object obj, BindingFlags invokeAttr)
[xUnit.net 00:00:40.98]   Finished:    NeoSharp.Tests
</StdOut>
    </Output>
    <RunInfos>
      <RunInfo computerName="r3e" outcome="Error" timestamp="2025-08-22T04:20:11.3402434+00:00">
        <Text>[xUnit.net 00:00:03.96]     NeoSharp.Tests.Crypto.NEP2Tests.TestNEP2KeyChecksumValidation [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="r3e" outcome="Error" timestamp="2025-08-22T04:20:15.0640927+00:00">
        <Text>[xUnit.net 00:00:07.68]     NeoSharp.Tests.Crypto.NEP2Tests.TestVariousPasswords(password: "password") [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="r3e" outcome="Error" timestamp="2025-08-22T04:20:18.6926070+00:00">
        <Text>[xUnit.net 00:00:11.31]     NeoSharp.Tests.Crypto.NEP2Tests.TestVariousPasswords(password: "a") [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="r3e" outcome="Error" timestamp="2025-08-22T04:20:18.6935643+00:00">
        <Text>[xUnit.net 00:00:11.31]     NeoSharp.Tests.Crypto.NEP2Tests.TestVariousPasswords(password: "") [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="r3e" outcome="Error" timestamp="2025-08-22T04:20:22.3135992+00:00">
        <Text>[xUnit.net 00:00:14.93]     NeoSharp.Tests.Crypto.NEP2Tests.TestVariousPasswords(password: "VeryLongPasswordWithSpecialCharacters!@#$%^&amp;*()_+-"···) [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="r3e" outcome="Error" timestamp="2025-08-22T04:20:26.0121077+00:00">
        <Text>[xUnit.net 00:00:18.63]     NeoSharp.Tests.Crypto.NEP2Tests.TestVariousPasswords(password: "\ud83d\udd10\ud83d\udd11\ud83d\udc8e") [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="r3e" outcome="Error" timestamp="2025-08-22T04:20:29.7087772+00:00">
        <Text>[xUnit.net 00:00:22.33]     NeoSharp.Tests.Crypto.NEP2Tests.TestDecryptWithWrongPassword [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="r3e" outcome="Error" timestamp="2025-08-22T04:20:33.3865354+00:00">
        <Text>[xUnit.net 00:00:26.00]     NeoSharp.Tests.Crypto.NEP2Tests.TestNEP2WithDifferentScryptParams [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="r3e" outcome="Error" timestamp="2025-08-22T04:20:33.3875249+00:00">
        <Text>[xUnit.net 00:00:26.01]     NeoSharp.Tests.Crypto.NEP2Tests.TestDecryptWithDefaultScryptParams [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="r3e" outcome="Error" timestamp="2025-08-22T04:20:33.3875644+00:00">
        <Text>[xUnit.net 00:00:26.01]     NeoSharp.Tests.Crypto.NEP2Tests.TestDecryptWithNonDefaultScryptParams [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="r3e" outcome="Error" timestamp="2025-08-22T04:20:37.1318054+00:00">
        <Text>[xUnit.net 00:00:29.75]     NeoSharp.Tests.Crypto.NEP2Tests.TestRoundTripEncryptionDecryption [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="r3e" outcome="Error" timestamp="2025-08-22T04:20:37.1373188+00:00">
        <Text>[xUnit.net 00:00:29.76]     NeoSharp.Tests.Crypto.NEP2Tests.TestEncryptWithNonDefaultScryptParams [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="r3e" outcome="Error" timestamp="2025-08-22T04:20:44.7089919+00:00">
        <Text>[xUnit.net 00:00:37.33]     NeoSharp.Tests.Crypto.NEP2Tests.TestMultipleEncryptionsProduceDifferentResults [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="r3e" outcome="Error" timestamp="2025-08-22T04:20:48.3474734+00:00">
        <Text>[xUnit.net 00:00:40.97]     NeoSharp.Tests.Crypto.NEP2Tests.TestEncryptWithDefaultScryptParams [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="r3e" outcome="Error" timestamp="2025-08-22T04:20:48.3513659+00:00">
        <Text>[xUnit.net 00:00:40.97]     NeoSharp.Tests.Crypto.NEP2Tests.TestNEP2AddressGeneration [FAIL]</Text>
      </RunInfo>
      <RunInfo computerName="r3e" outcome="Error" timestamp="2025-08-22T04:20:48.3514000+00:00">
        <Text>[xUnit.net 00:00:40.97]     NeoSharp.Tests.Crypto.NEP2Tests.TestInvalidNEP2Format [FAIL]</Text>
      </RunInfo>
    </RunInfos>
  </ResultSummary>
</TestRun>