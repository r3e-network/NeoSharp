{
  "summary": {
    "total_swift_tests": 0,
    "total_csharp_tests": 18,
    "total_mappings": 18,
    "fully_converted": 0,
    "partially_converted": 0,
    "missing_conversions": 0,
    "extra_csharp": 18,
    "overall_conversion_rate": 0.0
  },
  "detailed_mappings": [
    {
      "swift_file": "Missing",
      "csharp_file": "/home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Wallet/AccountTests.cs",
      "swift_tests": [],
      "csharp_tests": [
        "Create_ShouldCreateValidGenericAccount",
        "Constructor_WithExistingKeyPair_ShouldCreateCorrectAccount",
        "FromVerificationScript_ShouldCreateCorrectAccount",
        "FromPublicKey_ShouldCreateCorrectAccount",
        "CreateMultiSigAccount_ShouldCreateCorrectMultiSigAccount",
        "FromWIF_ShouldCreateCorrectAccount",
        "FromPrivateKey_ShouldCreateCorrectAccount",
        "GetScriptHash_ShouldReturnCorrectHash",
        "GetAddress_ShouldReturnCorrectAddress",
        "IsWatchOnly_ShouldReturnTrueForAccountsWithoutPrivateKey",
        "IsWatchOnly_ShouldReturnFalseForAccountsWithPrivateKey",
        "EncryptPrivateKey_ShouldEncryptPrivateKey",
        "DecryptPrivateKey_ShouldDecryptPrivateKey",
        "DecryptPrivateKey_WithWrongPassword_ShouldThrowException",
        "Sign_ShouldCreateValidSignature",
        "Sign_WithLockedAccount_ShouldThrowException",
        "SignData_ShouldCreateValidSignature",
        "CreateMultiSigAccount_WithInvalidThreshold_ShouldThrowException",
        "CreateMultiSigAccount_WithNullPublicKeys_ShouldThrowArgumentNullException",
        "CreateMultiSigAccount_WithEmptyPublicKeys_ShouldThrowArgumentException",
        "Constructor_WithNullKeyPair_ShouldThrowArgumentNullException",
        "Label_ShouldBeSettable",
        "IsDefault_ShouldReflectWalletState",
        "Equals_ShouldCompareByScriptHash"
      ],
      "missing_tests": [],
      "extra_tests": [
        "IsWatchOnly_ShouldReturnFalseForAccountsWithPrivateKey",
        "CreateMultiSigAccount_WithNullPublicKeys_ShouldThrowArgumentNullException",
        "DecryptPrivateKey_WithWrongPassword_ShouldThrowException",
        "CreateMultiSigAccount_WithEmptyPublicKeys_ShouldThrowArgumentException",
        "Constructor_WithNullKeyPair_ShouldThrowArgumentNullException",
        "IsDefault_ShouldReflectWalletState",
        "Sign_WithLockedAccount_ShouldThrowException",
        "FromPublicKey_ShouldCreateCorrectAccount",
        "Equals_ShouldCompareByScriptHash",
        "FromVerificationScript_ShouldCreateCorrectAccount",
        "IsWatchOnly_ShouldReturnTrueForAccountsWithoutPrivateKey",
        "EncryptPrivateKey_ShouldEncryptPrivateKey",
        "CreateMultiSigAccount_WithInvalidThreshold_ShouldThrowException",
        "CreateMultiSigAccount_ShouldCreateCorrectMultiSigAccount",
        "DecryptPrivateKey_ShouldDecryptPrivateKey",
        "Sign_ShouldCreateValidSignature",
        "FromPrivateKey_ShouldCreateCorrectAccount",
        "FromWIF_ShouldCreateCorrectAccount",
        "GetScriptHash_ShouldReturnCorrectHash",
        "GetAddress_ShouldReturnCorrectAddress",
        "SignData_ShouldCreateValidSignature",
        "Constructor_WithExistingKeyPair_ShouldCreateCorrectAccount",
        "Label_ShouldBeSettable",
        "Create_ShouldCreateValidGenericAccount"
      ],
      "conversion_rate": 100.0
    },
    {
      "swift_file": "Missing",
      "csharp_file": "/home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Types/Hash256Tests.cs",
      "swift_tests": [],
      "csharp_tests": [
        "Parse_WithValidHexString_ShouldCreateHash",
        "Constructor_WithInvalidHex_ShouldThrowException",
        "Constructor_WithValidBytes_ShouldCreateHash",
        "ToLittleEndianArray_ShouldReverseBytes",
        "Serialize_ShouldWriteLittleEndianBytes",
        "Deserialize_ShouldCreateHashFromLittleEndianBytes",
        "Equals_ShouldWorkCorrectly",
        "CompareTo_ShouldOrderCorrectly",
        "Size_ShouldReturn32",
        "Zero_ShouldReturnZeroHash",
        "FromData_ShouldCreateHashFromData",
        "FromLittleEndianBytes_ShouldCreateHashCorrectly",
        "ToArray_ShouldReturnBigEndianBytes",
        "ImplicitStringConversion_ShouldReturnHexString",
        "ExplicitHashConversion_ShouldCreateFromHexString",
        "Parse_WithRealHashes_ShouldSucceed"
      ],
      "missing_tests": [],
      "extra_tests": [
        "ToArray_ShouldReturnBigEndianBytes",
        "Equals_ShouldWorkCorrectly",
        "Zero_ShouldReturnZeroHash",
        "FromLittleEndianBytes_ShouldCreateHashCorrectly",
        "Deserialize_ShouldCreateHashFromLittleEndianBytes",
        "ToLittleEndianArray_ShouldReverseBytes",
        "Parse_WithRealHashes_ShouldSucceed",
        "FromData_ShouldCreateHashFromData",
        "ImplicitStringConversion_ShouldReturnHexString",
        "CompareTo_ShouldOrderCorrectly",
        "Constructor_WithValidBytes_ShouldCreateHash",
        "Size_ShouldReturn32",
        "Constructor_WithInvalidHex_ShouldThrowException",
        "Parse_WithValidHexString_ShouldCreateHash",
        "Serialize_ShouldWriteLittleEndianBytes",
        "ExplicitHashConversion_ShouldCreateFromHexString"
      ],
      "conversion_rate": 100.0
    },
    {
      "swift_file": "Missing",
      "csharp_file": "/home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Types/EnumTypeTests.cs",
      "swift_tests": [],
      "csharp_tests": [
        "ContractParameterType_ShouldWorkCorrectly",
        "WitnessScope_ShouldWorkCorrectly",
        "OpCode_ShouldHaveCorrectByteValues",
        "TransactionAttributeType_ShouldWorkCorrectly",
        "ContractParameterType_Collections_ShouldBeDetected",
        "ContractParameterType_Hashes_ShouldBeDetected",
        "ContractParameterType_BinaryData_ShouldBeDetected",
        "ContractParameterType_AllValues_ShouldHaveCorrectProperties",
        "ContractParameterType_FromJsonValue_WithValidValues_ShouldSucceed"
      ],
      "missing_tests": [],
      "extra_tests": [
        "ContractParameterType_Hashes_ShouldBeDetected",
        "OpCode_ShouldHaveCorrectByteValues",
        "ContractParameterType_Collections_ShouldBeDetected",
        "ContractParameterType_BinaryData_ShouldBeDetected",
        "ContractParameterType_FromJsonValue_WithValidValues_ShouldSucceed",
        "TransactionAttributeType_ShouldWorkCorrectly",
        "ContractParameterType_ShouldWorkCorrectly",
        "ContractParameterType_AllValues_ShouldHaveCorrectProperties",
        "WitnessScope_ShouldWorkCorrectly"
      ],
      "conversion_rate": 100.0
    },
    {
      "swift_file": "Missing",
      "csharp_file": "/home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Types/ContractParameterTests.cs",
      "swift_tests": [],
      "csharp_tests": [
        "Boolean_ShouldCreateBooleanParameter",
        "Integer_WithInt_ShouldCreateIntegerParameter",
        "Integer_WithBigInteger_ShouldCreateIntegerParameter",
        "String_ShouldCreateStringParameter",
        "ByteArray_WithBytes_ShouldCreateByteArrayParameter",
        "Hash160_ShouldCreateHash160Parameter",
        "Hash256_ShouldCreateHash256Parameter",
        "Array_ShouldCreateArrayParameter",
        "MapToContractParameter_ShouldHandleVariousTypes",
        "ToJson_Boolean_ShouldSerializeCorrectly",
        "ToJson_Integer_ShouldSerializeCorrectly",
        "ToJson_String_ShouldSerializeCorrectly",
        "ToJson_ByteArray_ShouldSerializeAsBase64",
        "ToJson_Hash160_ShouldSerializeCorrectly",
        "ToJson_Array_ShouldSerializeCorrectly",
        "Equals_ShouldWorkCorrectly"
      ],
      "missing_tests": [],
      "extra_tests": [
        "String_ShouldCreateStringParameter",
        "Integer_WithBigInteger_ShouldCreateIntegerParameter",
        "Hash160_ShouldCreateHash160Parameter",
        "ToJson_ByteArray_ShouldSerializeAsBase64",
        "Boolean_ShouldCreateBooleanParameter",
        "Hash256_ShouldCreateHash256Parameter",
        "MapToContractParameter_ShouldHandleVariousTypes",
        "Equals_ShouldWorkCorrectly",
        "ByteArray_WithBytes_ShouldCreateByteArrayParameter",
        "ToJson_Array_ShouldSerializeCorrectly",
        "Array_ShouldCreateArrayParameter",
        "ToJson_Boolean_ShouldSerializeCorrectly",
        "ToJson_Hash160_ShouldSerializeCorrectly",
        "ToJson_Integer_ShouldSerializeCorrectly",
        "Integer_WithInt_ShouldCreateIntegerParameter",
        "ToJson_String_ShouldSerializeCorrectly"
      ],
      "conversion_rate": 100.0
    },
    {
      "swift_file": "Missing",
      "csharp_file": "/home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Types/Hash160Tests.cs",
      "swift_tests": [],
      "csharp_tests": [
        "Constructor_WithValidBytes_ShouldCreateHash",
        "Constructor_WithInvalidLength_ShouldThrowException",
        "Parse_WithValidHexString_ShouldCreateHash",
        "Parse_WithoutPrefix_ShouldCreateHash",
        "Zero_ShouldReturnZeroHash",
        "Equals_WithSameHash_ShouldReturnTrue",
        "Equals_WithDifferentHash_ShouldReturnFalse",
        "GetHashCode_ShouldBeConsistent",
        "ToLittleEndianArray_ShouldReverseBytes",
        "FromAddress_WithValidAddress_ShouldCreateHash",
        "ToAddress_ShouldReturnCorrectAddress",
        "FromScript_WithValidScript_ShouldCreateHash",
        "FromPublicKey_WithValidPublicKey_ShouldCreateHash",
        "CompareTo_ShouldOrderCorrectly",
        "Size_ShouldReturn20",
        "Serialize_ShouldWriteLittleEndianBytes",
        "FromLittleEndianBytes_ShouldCreateHashCorrectly",
        "Parse_WithKnownContractHashes_ShouldSucceed"
      ],
      "missing_tests": [],
      "extra_tests": [
        "ToAddress_ShouldReturnCorrectAddress",
        "Parse_WithValidHexString_ShouldCreateHash",
        "Zero_ShouldReturnZeroHash",
        "FromLittleEndianBytes_ShouldCreateHashCorrectly",
        "Constructor_WithInvalidLength_ShouldThrowException",
        "ToLittleEndianArray_ShouldReverseBytes",
        "FromScript_WithValidScript_ShouldCreateHash",
        "Size_ShouldReturn20",
        "Parse_WithoutPrefix_ShouldCreateHash",
        "CompareTo_ShouldOrderCorrectly",
        "Constructor_WithValidBytes_ShouldCreateHash",
        "FromPublicKey_WithValidPublicKey_ShouldCreateHash",
        "GetHashCode_ShouldBeConsistent",
        "Equals_WithSameHash_ShouldReturnTrue",
        "Equals_WithDifferentHash_ShouldReturnFalse",
        "Serialize_ShouldWriteLittleEndianBytes",
        "FromAddress_WithValidAddress_ShouldCreateHash",
        "Parse_WithKnownContractHashes_ShouldSucceed"
      ],
      "conversion_rate": 100.0
    },
    {
      "swift_file": "Missing",
      "csharp_file": "/home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Serialization/BinaryWriterTests.cs",
      "swift_tests": [],
      "csharp_tests": [
        "WriteUInt32_ShouldWriteCorrectBytes",
        "WriteInt64_ShouldWriteCorrectBytes",
        "WriteUInt16_ShouldWriteCorrectBytes",
        "WriteVarInt_ShouldEncodeCorrectly",
        "WriteVarBytes_ShouldEncodeCorrectly",
        "WriteVarString_ShouldEncodeCorrectly",
        "WriteByte_ShouldWriteSingleByte",
        "WriteBytes_ShouldWriteByteArray",
        "WriteBoolean_ShouldWriteBooleaneanAsBytes",
        "WriteNullableBytes_ShouldHandleNullValues",
        "ToArray_ShouldReturnAllWrittenData",
        "Reset_ShouldClearBuffer",
        "Length_ShouldReturnCorrectLength",
        "Dispose_ShouldNotThrowException",
        "WriteVarBytes_WithBigIntegerData_ShouldEncodeCorrectly"
      ],
      "missing_tests": [],
      "extra_tests": [
        "WriteVarBytes_ShouldEncodeCorrectly",
        "WriteUInt16_ShouldWriteCorrectBytes",
        "ToArray_ShouldReturnAllWrittenData",
        "Dispose_ShouldNotThrowException",
        "WriteUInt32_ShouldWriteCorrectBytes",
        "WriteBoolean_ShouldWriteBooleaneanAsBytes",
        "WriteNullableBytes_ShouldHandleNullValues",
        "WriteByte_ShouldWriteSingleByte",
        "WriteVarString_ShouldEncodeCorrectly",
        "Reset_ShouldClearBuffer",
        "Length_ShouldReturnCorrectLength",
        "WriteVarInt_ShouldEncodeCorrectly",
        "WriteVarBytes_WithBigIntegerData_ShouldEncodeCorrectly",
        "WriteBytes_ShouldWriteByteArray",
        "WriteInt64_ShouldWriteCorrectBytes"
      ],
      "conversion_rate": 100.0
    },
    {
      "swift_file": "Missing",
      "csharp_file": "/home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Serialization/BinaryReaderTests.cs",
      "swift_tests": [],
      "csharp_tests": [
        "ReadPushDataBytes_ShouldReadCorrectlyBasedOnPrefix",
        "ReadPushData_WithInvalidOpCode_ShouldThrowException",
        "ReadPushDataString_ShouldReadStringsCorrectly",
        "ReadPushDataBigInteger_ShouldReadNumbersCorrectly",
        "ReadUInt32_ShouldReadCorrectValues",
        "ReadInt64_ShouldReadCorrectValues",
        "ReadByte_ShouldReadSingleByte",
        "ReadBytes_ShouldReadSpecifiedNumberOfBytes",
        "ReadUInt16_ShouldReadCorrectValues",
        "ReadVarInt_ShouldReadVariableIntegers",
        "ReadVarBytes_ShouldReadVariableBytes",
        "ReadVarString_ShouldReadVariableString",
        "ReadBoolean_ShouldReadBooleaneanValues",
        "Position_ShouldTrackCurrentPosition",
        "Available_ShouldReturnRemainingBytes",
        "ReadBeyondEnd_ShouldThrowException",
        "ReadBigInteger_ShouldReadCorrectly"
      ],
      "missing_tests": [],
      "extra_tests": [
        "ReadPushDataBytes_ShouldReadCorrectlyBasedOnPrefix",
        "ReadBeyondEnd_ShouldThrowException",
        "ReadUInt32_ShouldReadCorrectValues",
        "ReadByte_ShouldReadSingleByte",
        "Position_ShouldTrackCurrentPosition",
        "ReadPushData_WithInvalidOpCode_ShouldThrowException",
        "ReadBigInteger_ShouldReadCorrectly",
        "ReadBytes_ShouldReadSpecifiedNumberOfBytes",
        "ReadBoolean_ShouldReadBooleaneanValues",
        "ReadInt64_ShouldReadCorrectValues",
        "ReadVarString_ShouldReadVariableString",
        "ReadPushDataBigInteger_ShouldReadNumbersCorrectly",
        "ReadVarInt_ShouldReadVariableIntegers",
        "ReadUInt16_ShouldReadCorrectValues",
        "ReadPushDataString_ShouldReadStringsCorrectly",
        "Available_ShouldReturnRemainingBytes",
        "ReadVarBytes_ShouldReadVariableBytes"
      ],
      "conversion_rate": 100.0
    },
    {
      "swift_file": "Missing",
      "csharp_file": "/home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/WIFTests.cs",
      "swift_tests": [],
      "csharp_tests": [
        "ValidWifToPrivateKey_ShouldDecodeCorrectly",
        "PrivateKeyToWif_ShouldEncodeCorrectly",
        "RoundTrip_ShouldPreservePrivateKey",
        "WrongFirstByteWif_ShouldThrowException",
        "WrongByte33Wif_ShouldThrowException",
        "InvalidChecksum_ShouldThrowException",
        "NullPrivateKey_ShouldThrowArgumentNullException",
        "NullWifString_ShouldThrowArgumentNullException",
        "EmptyWifString_ShouldThrowWIFException",
        "UncompressedWif_ShouldDecodeCorrectly",
        "IsValidWIF_WithValidWIF_ShouldReturnTrue",
        "WronglySizedWifs_ShouldThrowException",
        "InvalidPrivateKeyLength_ShouldThrowWIFException",
        "CompressedFlag_ShouldBeHandledCorrectly",
        "IsValidWIF_WithInvalidWIF_ShouldReturnFalse"
      ],
      "missing_tests": [],
      "extra_tests": [
        "IsValidWIF_WithValidWIF_ShouldReturnTrue",
        "IsValidWIF_WithInvalidWIF_ShouldReturnFalse",
        "WronglySizedWifs_ShouldThrowException",
        "WrongFirstByteWif_ShouldThrowException",
        "NullPrivateKey_ShouldThrowArgumentNullException",
        "InvalidChecksum_ShouldThrowException",
        "NullWifString_ShouldThrowArgumentNullException",
        "EmptyWifString_ShouldThrowWIFException",
        "CompressedFlag_ShouldBeHandledCorrectly",
        "RoundTrip_ShouldPreservePrivateKey",
        "PrivateKeyToWif_ShouldEncodeCorrectly",
        "UncompressedWif_ShouldDecodeCorrectly",
        "InvalidPrivateKeyLength_ShouldThrowWIFException",
        "ValidWifToPrivateKey_ShouldDecodeCorrectly",
        "WrongByte33Wif_ShouldThrowException"
      ],
      "conversion_rate": 100.0
    },
    {
      "swift_file": "Missing",
      "csharp_file": "/home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/ScryptParamsTests.cs",
      "swift_tests": [],
      "csharp_tests": [
        "TestSerialize",
        "TestDeserialize",
        "TestDefaultScryptParams",
        "TestScryptParamsEquality",
        "TestScryptParamsValidation",
        "TestScryptParamsWithExtraFields",
        "TestScryptParamsIncompleteJson",
        "TestScryptParamsStringRepresentation",
        "TestScryptParamsMemoryUsageCalculation",
        "TestScryptParamsPerformanceCategory",
        "TestScryptParamsRoundTrip",
        "TestScryptParamsJsonVariations"
      ],
      "missing_tests": [],
      "extra_tests": [
        "TestScryptParamsEquality",
        "TestDeserialize",
        "TestScryptParamsMemoryUsageCalculation",
        "TestScryptParamsWithExtraFields",
        "TestSerialize",
        "TestScryptParamsIncompleteJson",
        "TestScryptParamsValidation",
        "TestScryptParamsStringRepresentation",
        "TestScryptParamsJsonVariations",
        "TestDefaultScryptParams",
        "TestScryptParamsPerformanceCategory",
        "TestScryptParamsRoundTrip"
      ],
      "conversion_rate": 100.0
    },
    {
      "swift_file": "Missing",
      "csharp_file": "/home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/ECKeyPairTests.cs",
      "swift_tests": [],
      "csharp_tests": [
        "NewPublicKeyFromPoint_ShouldCreateCorrectKey",
        "NewPublicKeyFromUncompressedPoint_ShouldCompressCorrectly",
        "NewPublicKeyFromStringWithInvalidSize_ShouldThrowException",
        "NewPublicKeyFromPointWithHexPrefix_ShouldHandlePrefix",
        "SerializePublicKey_ShouldReturnCorrectBytes",
        "DeserializePublicKey_ShouldCreateCorrectKey",
        "PublicKeySize_ShouldBeCorrect",
        "CreateRandomKeyPair_ShouldGenerateValidKeys",
        "KeyPairFromPrivateKey_ShouldGenerateCorrectPublicKey",
        "KeyPairSigning_ShouldProduceValidSignature",
        "KeyPairVerification_ShouldVerifyOwnSignature",
        "InvalidPrivateKey_ShouldThrowException",
        "NullPrivateKey_ShouldThrowArgumentNullException",
        "PublicKeyEquality_ShouldWorkCorrectly",
        "PublicKeyInequality_ShouldWorkCorrectly",
        "GetAddress_ShouldReturnValidNeoAddress",
        "GetScriptHash_ShouldReturnValidHash",
        "DeterministicKeyGeneration_ShouldBeConsistent"
      ],
      "missing_tests": [],
      "extra_tests": [
        "GetScriptHash_ShouldReturnValidHash",
        "NewPublicKeyFromStringWithInvalidSize_ShouldThrowException",
        "PublicKeyInequality_ShouldWorkCorrectly",
        "KeyPairVerification_ShouldVerifyOwnSignature",
        "InvalidPrivateKey_ShouldThrowException",
        "CreateRandomKeyPair_ShouldGenerateValidKeys",
        "NewPublicKeyFromUncompressedPoint_ShouldCompressCorrectly",
        "KeyPairFromPrivateKey_ShouldGenerateCorrectPublicKey",
        "SerializePublicKey_ShouldReturnCorrectBytes",
        "PublicKeySize_ShouldBeCorrect",
        "KeyPairSigning_ShouldProduceValidSignature",
        "GetAddress_ShouldReturnValidNeoAddress",
        "NewPublicKeyFromPointWithHexPrefix_ShouldHandlePrefix",
        "DeserializePublicKey_ShouldCreateCorrectKey",
        "NewPublicKeyFromPoint_ShouldCreateCorrectKey",
        "NullPrivateKey_ShouldThrowArgumentNullException",
        "DeterministicKeyGeneration_ShouldBeConsistent",
        "PublicKeyEquality_ShouldWorkCorrectly"
      ],
      "conversion_rate": 100.0
    },
    {
      "swift_file": "Missing",
      "csharp_file": "/home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/SecurityTests.cs",
      "swift_tests": [],
      "csharp_tests": [
        "TestSecureBytesCreation",
        "TestSecureBytesConstantTimeComparison",
        "TestSecureECKeyPair",
        "TestConstantTimeByteComparison",
        "TestConstantTimeStringComparison",
        "TestConstantTimeSelection",
        "TestNEP2EncryptionDecryption",
        "TestNEP2WrongPassword",
        "TestHashCaching",
        "TestHashCacheThreadSafety",
        "TestPrivateKeyNotInMemoryAfterClear",
        "TestWIFImportSecurely",
        "TestDeterministicSignatures",
        "TestSignatureVerification",
        "TestTimingAttackResistance",
        "TestSecureMemoryZeroing",
        "TestRandomNumberGeneration",
        "TestCryptographicRandomness"
      ],
      "missing_tests": [],
      "extra_tests": [
        "TestDeterministicSignatures",
        "TestCryptographicRandomness",
        "TestNEP2EncryptionDecryption",
        "TestSecureBytesConstantTimeComparison",
        "TestWIFImportSecurely",
        "TestHashCacheThreadSafety",
        "TestSecureECKeyPair",
        "TestPrivateKeyNotInMemoryAfterClear",
        "TestConstantTimeStringComparison",
        "TestConstantTimeByteComparison",
        "TestSignatureVerification",
        "TestHashCaching",
        "TestSecureBytesCreation",
        "TestSecureMemoryZeroing",
        "TestRandomNumberGeneration",
        "TestTimingAttackResistance",
        "TestNEP2WrongPassword",
        "TestConstantTimeSelection"
      ],
      "conversion_rate": 100.0
    },
    {
      "swift_file": "Missing",
      "csharp_file": "/home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/NEP2Tests.cs",
      "swift_tests": [],
      "csharp_tests": [
        "TestDecryptWithDefaultScryptParams",
        "TestDecryptWithNonDefaultScryptParams",
        "TestEncryptWithDefaultScryptParams",
        "TestEncryptWithNonDefaultScryptParams",
        "TestRoundTripEncryptionDecryption",
        "TestDecryptWithWrongPassword",
        "TestInvalidNEP2Format",
        "TestNEP2WithDifferentScryptParams",
        "TestNEP2KeyChecksumValidation",
        "TestNEP2AddressGeneration",
        "TestMultipleEncryptionsProduceDifferentResults",
        "TestVariousPasswords"
      ],
      "missing_tests": [],
      "extra_tests": [
        "TestVariousPasswords",
        "TestDecryptWithWrongPassword",
        "TestNEP2WithDifferentScryptParams",
        "TestNEP2KeyChecksumValidation",
        "TestEncryptWithDefaultScryptParams",
        "TestDecryptWithDefaultScryptParams",
        "TestDecryptWithNonDefaultScryptParams",
        "TestMultipleEncryptionsProduceDifferentResults",
        "TestNEP2AddressGeneration",
        "TestRoundTripEncryptionDecryption",
        "TestEncryptWithNonDefaultScryptParams",
        "TestInvalidNEP2Format"
      ],
      "conversion_rate": 100.0
    },
    {
      "swift_file": "Missing",
      "csharp_file": "/home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/Base64Tests.cs",
      "swift_tests": [],
      "csharp_tests": [
        "Base64Encode_ForString_ShouldEncodeCorrectly",
        "Base64Encode_ForBytes_ShouldEncodeCorrectly",
        "Base64Decode_ShouldDecodeCorrectly",
        "Base64Encode_WithEmptyInput_ShouldReturnEmptyString",
        "Base64Decode_WithEmptyInput_ShouldReturnEmptyArray",
        "Base64Encode_WithUtf8String_ShouldEncodeCorrectly",
        "Base64Decode_WithInvalidInput_ShouldThrowException",
        "Base64RoundTrip_ShouldPreserveData"
      ],
      "missing_tests": [],
      "extra_tests": [
        "Base64RoundTrip_ShouldPreserveData",
        "Base64Encode_WithUtf8String_ShouldEncodeCorrectly",
        "Base64Decode_WithInvalidInput_ShouldThrowException",
        "Base64Encode_WithEmptyInput_ShouldReturnEmptyString",
        "Base64Encode_ForBytes_ShouldEncodeCorrectly",
        "Base64Encode_ForString_ShouldEncodeCorrectly",
        "Base64Decode_ShouldDecodeCorrectly",
        "Base64Decode_WithEmptyInput_ShouldReturnEmptyArray"
      ],
      "conversion_rate": 100.0
    },
    {
      "swift_file": "Missing",
      "csharp_file": "/home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/Bip32ECKeyPairTests.cs",
      "swift_tests": [],
      "csharp_tests": [
        "TestVectors1",
        "TestVectors2",
        "TestVectors3",
        "TestHardenedDerivation",
        "TestPathValidation",
        "TestMasterKeyGeneration"
      ],
      "missing_tests": [],
      "extra_tests": [
        "TestPathValidation",
        "TestVectors3",
        "TestHardenedDerivation",
        "TestVectors2",
        "TestVectors1",
        "TestMasterKeyGeneration"
      ],
      "conversion_rate": 100.0
    },
    {
      "swift_file": "Missing",
      "csharp_file": "/home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/SignTests.cs",
      "swift_tests": [],
      "csharp_tests": [
        "TestSignMessage",
        "TestRecoverSigningScriptHash",
        "TestSignatureDataFromBytes",
        "TestPublicKeyFromSignedMessage",
        "TestPublicKeyFromPrivateKey",
        "TestKeyFromSignedMessageWithInvalidSignature",
        "TestVerifySignature",
        "TestSignatureDataEquality",
        "TestDeterministicSigning",
        "TestSignDifferentMessages",
        "TestSignatureRecoveryIds",
        "TestSignatureByteArrayConversion",
        "TestInvalidSignatureVerification",
        "TestSignatureWithWrongKey",
        "TestSignVariousMessages"
      ],
      "missing_tests": [],
      "extra_tests": [
        "TestKeyFromSignedMessageWithInvalidSignature",
        "TestSignVariousMessages",
        "TestSignatureWithWrongKey",
        "TestVerifySignature",
        "TestSignatureByteArrayConversion",
        "TestSignMessage",
        "TestPublicKeyFromSignedMessage",
        "TestPublicKeyFromPrivateKey",
        "TestSignDifferentMessages",
        "TestSignatureRecoveryIds",
        "TestInvalidSignatureVerification",
        "TestSignatureDataEquality",
        "TestSignatureDataFromBytes",
        "TestDeterministicSigning",
        "TestRecoverSigningScriptHash"
      ],
      "conversion_rate": 100.0
    },
    {
      "swift_file": "Missing",
      "csharp_file": "/home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Crypto/Base58Tests.cs",
      "swift_tests": [],
      "csharp_tests": [
        "TestBase58EncodingForValidStrings",
        "TestBase58DecodingForValidStrings",
        "TestBase58DecodingForInvalidStrings",
        "TestBase58CheckEncoding",
        "TestBase58CheckDecoding",
        "TestBase58CheckDecodingWithInvalidCharacters",
        "TestBase58CheckDecodingWithInvalidChecksum",
        "TestBase58EmptyInput",
        "TestBase58LeadingZeros",
        "TestBase58RoundTrip",
        "TestBase58EncodingKnownValues",
        "TestBase58DecodingKnownValues"
      ],
      "missing_tests": [],
      "extra_tests": [
        "TestBase58EncodingForValidStrings",
        "TestBase58DecodingForInvalidStrings",
        "TestBase58CheckDecoding",
        "TestBase58CheckEncoding",
        "TestBase58DecodingForValidStrings",
        "TestBase58CheckDecodingWithInvalidCharacters",
        "TestBase58DecodingKnownValues",
        "TestBase58LeadingZeros",
        "TestBase58EmptyInput",
        "TestBase58CheckDecodingWithInvalidChecksum",
        "TestBase58EncodingKnownValues",
        "TestBase58RoundTrip"
      ],
      "conversion_rate": 100.0
    },
    {
      "swift_file": "Missing",
      "csharp_file": "/home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Contract/SmartContractTests.cs",
      "swift_tests": [],
      "csharp_tests": [
        "Constructor_ShouldSetScriptHashCorrectly",
        "InvokeFunction_WithEmptyString_ShouldThrowException",
        "BuildInvokeFunctionScript_ShouldCreateCorrectScript",
        "InvokeFunction_ShouldCreateTransactionBuilder",
        "SmartContract_WithNullScriptHash_ShouldThrowArgumentNullException",
        "BuildInvokeFunctionScript_WithNullMethod_ShouldThrowArgumentNullException",
        "BuildInvokeFunctionScript_WithNullParameters_ShouldWork",
        "InvokeFunction_WithNullMethod_ShouldThrowArgumentNullException",
        "InvokeFunction_WithNullParameters_ShouldWork",
        "ScriptHash_ShouldBeReadOnly",
        "Equals_ShouldCompareByScriptHash",
        "ToString_ShouldReturnScriptHashString",
        "BuildInvokeFunctionScript_WithEmptyMethod_ShouldThrowArgumentException",
        "BuildInvokeFunctionScript_WithWhitespaceMethod_ShouldThrowArgumentException",
        "InvokeFunction_WithEmptyMethod_ShouldThrowArgumentException",
        "InvokeFunction_WithWhitespaceMethod_ShouldThrowArgumentException"
      ],
      "missing_tests": [],
      "extra_tests": [
        "BuildInvokeFunctionScript_WithNullParameters_ShouldWork",
        "ToString_ShouldReturnScriptHashString",
        "BuildInvokeFunctionScript_WithWhitespaceMethod_ShouldThrowArgumentException",
        "InvokeFunction_WithWhitespaceMethod_ShouldThrowArgumentException",
        "BuildInvokeFunctionScript_WithEmptyMethod_ShouldThrowArgumentException",
        "BuildInvokeFunctionScript_WithNullMethod_ShouldThrowArgumentNullException",
        "Equals_ShouldCompareByScriptHash",
        "ScriptHash_ShouldBeReadOnly",
        "InvokeFunction_WithNullParameters_ShouldWork",
        "InvokeFunction_WithEmptyString_ShouldThrowException",
        "InvokeFunction_ShouldCreateTransactionBuilder",
        "BuildInvokeFunctionScript_ShouldCreateCorrectScript",
        "SmartContract_WithNullScriptHash_ShouldThrowArgumentNullException",
        "InvokeFunction_WithEmptyMethod_ShouldThrowArgumentException",
        "InvokeFunction_WithNullMethod_ShouldThrowArgumentNullException",
        "Constructor_ShouldSetScriptHashCorrectly"
      ],
      "conversion_rate": 100.0
    },
    {
      "swift_file": "Missing",
      "csharp_file": "/home/ubuntu/NeoSwift/NeoSharp/tests/NeoSharp.Tests/Script/ScriptBuilderTests.cs",
      "swift_tests": [],
      "csharp_tests": [
        "PushArrayEmpty_ShouldCreateNewArray0",
        "PushParamEmptyArray_ShouldCreateNewArray0",
        "PushByteArray_ShouldHandleDifferentSizes",
        "PushString_ShouldHandleDifferentSizes",
        "PushInteger_ShouldHandleSpecialValues",
        "PushInteger_ShouldHandleLargeNumbers",
        "PushInteger_ShouldHandleVeryLargeNumbers",
        "VerificationScriptFromPublicKeys_ShouldCreateCorrectScript",
        "VerificationScriptFromPublicKey_ShouldCreateCorrectScript",
        "PushMap_ShouldCreateCorrectMapStructure",
        "PushMapNested_ShouldCreateCorrectNestedMapStructure",
        "PushBoolean_ShouldCreateCorrectOpCode",
        "OpCode_ShouldAddCorrectOpCode",
        "Clear_ShouldResetBuilder",
        "ContractCall_ShouldCreateCorrectScript",
        "BuildThrowScript_ShouldCreateThrowScript"
      ],
      "missing_tests": [],
      "extra_tests": [
        "VerificationScriptFromPublicKey_ShouldCreateCorrectScript",
        "BuildThrowScript_ShouldCreateThrowScript",
        "PushInteger_ShouldHandleLargeNumbers",
        "OpCode_ShouldAddCorrectOpCode",
        "PushMap_ShouldCreateCorrectMapStructure",
        "VerificationScriptFromPublicKeys_ShouldCreateCorrectScript",
        "PushArrayEmpty_ShouldCreateNewArray0",
        "PushInteger_ShouldHandleVeryLargeNumbers",
        "PushBoolean_ShouldCreateCorrectOpCode",
        "ContractCall_ShouldCreateCorrectScript",
        "PushMapNested_ShouldCreateCorrectNestedMapStructure",
        "PushInteger_ShouldHandleSpecialValues",
        "PushByteArray_ShouldHandleDifferentSizes",
        "PushString_ShouldHandleDifferentSizes",
        "PushParamEmptyArray_ShouldCreateNewArray0",
        "Clear_ShouldResetBuilder"
      ],
      "conversion_rate": 100.0
    }
  ],
  "missing_files": [],
  "conversion_issues": []
}